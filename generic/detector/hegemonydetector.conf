[io]
# Name of the kafka topic containing data to monitor
input_topic=ihr_hegemony

# Field name for the monitored values
value_field=hege

# Field name for the key identifiers
key_field=scope,asn

# Name of the kafka topic where anomalies are reported
output_topic=ihr_hegemony_anomalies_ipv4

# Granularity of the input data in minutes
time_granularity_min=15

# Kafka consumer group ID. Used for parallel processing and offset management.
consumer_group=ihr_hegemony_anomaly_detection_ipv4


[detection]
# Detection threshold
threshold=5

# Deviation metric used for the detection, should be median or mean and it
# corresponds to the median absolute deviation to the median or the mean
# absolute deviation to the median
# The median one is more robust but might give too many false positives for
# noisy signals
dev_metric=mean

# Minimum deviation. Required for very stable data. 
min_dev=0.01

# Length of the history buffer to compute median and deviation (in hours)
history_hours=72

# If there is some data holes, the history might not be complete. We avoid
# doing detection if the history is less than history_min_ratio*expected size.
# For example, with history_hours=72h and history_min_ratio=0.6 we ensure that
# the history contains at least 2 of the 3 preceding days.
history_min_ratio=0.6


# Configuration for python logger:
[loggers]
keys=root

[handlers]
keys=file_handler

[formatters]
keys=formatter

[logger_root]
level=INFO
handlers=file_handler

[handler_file_handler]
class=FileHandler
level=INFO
formatter=formatter
args=('ihr_hegemony_anomaly_detection_ipv4.log',)

[formatter_formatter]
format=%(asctime)s %(processName)-12s %(levelname)-8s %(message)s
